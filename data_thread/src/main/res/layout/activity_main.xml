<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/tvInfo"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="156dp"
        android:layout_marginTop="184dp"
        android:text="Запустить"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="10dp"
        android:layout_marginTop="64dp"
        android:text="Различие между методами «runOnUiThread» и «postDelayed» состоит в том, что метод «runOnUiThread» выполняет код в основном потоке, тогда как метод «postDelayed» позволяет отложить выполнение кода на определенный промежуток времени, но не блокирует основной поток.  В последовательности запуска этих методов нет четкой зависимости. Метод &quot;runOnUiThread&quot; может быть использован внутри метода &quot;post&quot;, чтобы обновить UI в основном потоке. Метод &quot;postDelayed&quot; может быть использован после вызова &quot;runOnUiThread&quot;, чтобы отложить обновление элементов пользовательского интерфейса на некоторое время."
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/tvInfo" />
</androidx.constraintlayout.widget.ConstraintLayout>